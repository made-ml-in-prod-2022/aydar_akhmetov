name: homework1 action

on:
  push:
    branches: [main, homework1_hard]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."

      - name: Setup pyenv
        uses: "gabrielfalcao/pyenv-action@v9"
        with:
            default: 3.8.10

      - name: Setup python version local
        run: pyenv local 3.8.10

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
            poetry-version: 1.1.11

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Setup dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: poetry run python -m pytest tests/